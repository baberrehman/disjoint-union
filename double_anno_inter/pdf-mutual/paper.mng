\documentclass[a4paper]{article}

\usepackage{geometry}
\geometry{left=2.5cm,right=2.5cm,top=2.5cm,bottom=2.5cm}

% Basics
\usepackage{fixltx2e}
\usepackage{url}
\usepackage{fancyvrb}
\usepackage{mdwlist}  % Miscellaneous list-related commands
\usepackage{xspace}   % Smart spacing
\usepackage{supertabular}

% https://www.nesono.com/?q=book/export/html/347
% Package for inserting TODO statements in nice colorful boxes - so that you
% won’t forget to ﬁx/remove them. To add a todo statement, use something like
% \todo{Find better wording here}.
\usepackage{todonotes}

%% Math
\usepackage{amsmath}
\usepackage{amsthm}
\usepackage{amssymb}
\usepackage{bm}       % Bold symbols in maths mode

% http://tex.stackexchange.com/questions/114151/how-do-i-reference-in-appendix-a-theorem-given-in-the-body
\usepackage{thmtools, thm-restate}

%% Theoretical computer science
\usepackage{stmaryrd}
\usepackage{mathtools}  % For "::=" ( \Coloneqq )

%% Code listings
\usepackage{listings}

\usepackage{listings}
\usepackage{xcolor}

\definecolor{codegreen}{rgb}{0,0.6,0}
\definecolor{codegray}{rgb}{0.5,0.5,0.5}
\definecolor{codepurple}{rgb}{0.58,0,0.82}
\definecolor{backcolour}{rgb}{0.95,0.95,0.92}

\lstdefinestyle{mystyle}{
    %backgroundcolor=\color{backcolour},   
    commentstyle=\color{codegreen},
    keywordstyle=\color{magenta},
    numberstyle=\tiny\color{codegray},
    stringstyle=\color{codepurple},
    basicstyle=\ttfamily\footnotesize,
    breakatwhitespace=false,         
    breaklines=true,                 
    captionpos=b,                    
    keepspaces=true,                 
    numbers=left,                    
    numbersep=5pt,                  
    showspaces=false,                
    showstringspaces=false,
    showtabs=false,                  
    tabsize=2
}

\lstset{style=mystyle}

%% Font
\usepackage[euler-digits,euler-hat-accent]{eulervm}


\usepackage{ottalt}

\renewcommand\ottaltinferrule[4]{
  \inferrule*[right={#1}]
    {#3}
    {#4}
}


% Ott includes
\inputott{ott-rules}


\title{Rules Version 2 (Disjoint Union Type)}
\author{Baber}
\begin{document}

\maketitle

\begin{align*}
&Type &A, B&::=  \top  ~ | ~ \bot ~|~ Int ~|~ \ottnt{A}  \rightarrow  \ottnt{B}~ |~ \ottnt{A}  \vee  \ottnt{B} ~ |~ \ottnt{A}  \wedge  \ottnt{B}\\
&Expr &e &::= x ~|~ n ~|~ e:A ~|~\lambda  \ottmv{x}  \ottsym{.}  \ottnt{e} ~ | ~ e1e2 ~|~  typeof \  \ottnt{e}  \ as \  \ottnt{A}  \  \ottnt{e_{{\mathrm{1}}}}  \  \ottnt{B}  \  \ottnt{e_{{\mathrm{2}}}} \\
&PExpr & p &::= n ~|~ \lambda  \ottmv{x}  \ottsym{.}  \ottnt{e}  \ottsym{:}  \ottnt{A}  \rightarrow  \ottnt{B} \\
%&RExpr & r &::= e1e2 ~|~  typeof \  \ottnt{e}  \ as \  \ottnt{A}  \  \ottnt{e_{{\mathrm{1}}}}  \  \ottnt{B}  \  \ottnt{e_{{\mathrm{2}}}}  \\
%&UExpr & u &::= r ~|~ p ~ |~ u : A \\
&Value &v &::= p : A \\
&Context & \Gamma &::= empty~ |~ \Gamma  \ottsym{,}  \ottmv{x}  \ottsym{:}  \ottnt{A}
\end{align*}

%\begin{align*}
%&Isomorphic & A \sim B & ::= \ottnt{A}  \textless:  \ottnt{B} \wedge \ottnt{B}  \textless:  \ottnt{A}
%\end{align*}


%\begin{align*}
%&BottomLikeSpec & C & ::= (\forall A ~ B, ~ \ottnt{A}  \wedge  \ottnt{B} \sim C \rightarrow \neg ( \ottnt{A}  \textless:  \ottnt{B} ) \wedge \neg ( \ottnt{B}  \textless:  \ottnt{A} )) \vee (\ottnt{C}  \textless:   \bot )
%\end{align*}

%\begin{align*}
%&DisjSpec & A * B & ::= \forall C, \ottnt{C}  \textless:  \ottnt{A} \wedge \ottnt{C}  \textless:  \ottnt{B} \rightarrow  \rfloor \ottnt{C} \lfloor
%\end{align*}


%\begin{table}
     {\renewcommand{\arraystretch}{1.5}
     \begin{center}
     \begin{tabular}{|lcll|}
%       \hline
%      Isomorphic & A $\backsimeq$ B & ::= & $\ottnt{A}  \textless:  \ottnt{B} \wedge \ottnt{B}  \textless:  \ottnt{A}$ \\
    %   \hline
    %  BottomLikeSpec & $ \rfloor  \ottnt{C}  \lfloor_s $ & ::= & $\forall A, ~ Ord ~ A ~ \rightarrow \neg \ottnt{A}  \textless:  \ottnt{C}$ \\
%      BottomLikeSpec & C & ::= & $(\exists A ~ B, ~ (\ottnt{A}  \wedge  \ottnt{B}) \backsimeq C \rightarrow \neg ( \ottnt{A}  \textless:  \ottnt{B} ) \vee \neg ( \ottnt{B}  \textless:  \ottnt{A} )) \vee (\ottnt{C}  \textless:   \bot )$ \\
       \hline
      DisjSpec & A $*_s$ B & ::= & ~$\forall C, ~ Ord ~ C ~ \rightarrow \neg \ottnt{C}  \textless:  \ottnt{A}  \wedge  \ottnt{B}$\\
       \hline
      DisjAlgo & A $*_a$ B & ::= & ~ $(FindSubtypes ~ A) ~ `inter` ~ (FindSubtypes ~ B) = []$ \\
       \hline
     \end{tabular}
     \end{center} }
%\end{table}

\bigskip

\begin{lstlisting}[language=Haskell]
Fixpoint FindSubtypes (A: typ) :=
    match A with
    | t_top         => [t_int; t_arrow t_top t_bot; t_top]
    | t_bot         => []
    | t_int         => [t_int]
    | t_arrow A1 B1 => [t_arrow t_top t_bot]
    | t_union A1 B1 => (FindSubtypes A1) `union` (FindSubtypes B1)
    | t_and A1 B1   => (FindSubtypes A1) `inter` (FindSubtypes B1)
    end.
\end{lstlisting}

\bigskip

\ottdefnsOrdinary

%\ottdefnsBottomLike

%\ottdefnsDisjointness

\ottdefnsSubtyping

\ottdefnsTyping

\ottdefnsReduction


\end{document}
